;;; -*- Encoding: utf-8; system :budden-tools; -*-
;;; (С) Денис Будяк 2016. MIT лицензия.

;;; Средство определения пакетов. Отличия от defpackage
#|
 1. Есть только use, нет импорта по одной букве
 2. Совпадающие символы запрещаются 
 3. Локальные псевдонимы пакетов 
 4. Русифицировано
 5. Нет shadow и shadowing-import
 6. Используются нестандартные функции работы с системой пакетов, стандартные использовать нельзя (но мы не можем это предотвратить). Нужно поправить нашу таблицу чтения под это.
 7. Нет функций export, unintern, make-package, есть только defpackage
 8. При изменении пакета изменения передаются во все использующие пакеты, поэтому конфликты во время выполнения defpackage исключены.
 9. Обычный пакет не должен использовать "наш" пакет, иначе конфликты при defpackage могут вернуться.
 10. Регистр не преобразуется

Как менять зависимые пакеты без конфликтов?

А. Совсем неоптимизированная:
При изменении пакета идти по зависимостям и выполнять все зависимые определения.
Для этого нужно запомнить информацию, достаточную для повторного выполнения определения. 

Б. Более-менее оптимизированная:
Запомнить не только определение, но и множество символов с учётом того, какие должны откуда браться. При повторном определении вычислять новое множество символов и сравнивать новое со старым. Если ничего не поменялось, то и не нужно повторно вычислять определение. Пока что этого НЕ ДЕЛАЕМ - нужно сделать простой вариант и хорошо закрыть его тестами. 

Таким образом, определение нужно запомнить в любом случае.

Избежание конфликтов при переопределении:
1. Появился новый импортируемый символ или clash - нужно стереть внутренний символ, если он уже существовал. 
2. Исчез clash - нужно его unintern.

Минимизация утечек при переопределении:
Перед удалением символа должен быть способ узнать, где он используется. Например, если он используется как данные, неплохо бы хотя бы предупредить о последствиях. 

|#

;; разобраться с удалением символа. Например, написать ещё функции: разэкспортировать 
;; символ отовсюду, удалить символ вообще. 
;; Добавить никнейм пакету

;;; РЕАЛИЗАЦИЯ УБРАНА 2017-06-17. 

;;; Она нигде не использовалась. Были и другие файлы, они тоже убраны. Причина убирания - зависимость
;;; от начинки SBCL

;;; См. коммит "убираем defpackage-l2"

